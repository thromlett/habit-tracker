// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  PAID_USER
  ADMIN
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId 
  identifier String 
  token      String   @unique
  expires    DateTime
}

model PasswordResetToken {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  identifier  String
  token       String  @unique
  expires     DateTime
}


model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  password String
  role     Role     @default(USER)
  emailVerified DateTime?
  createdAt     DateTime?
  lastLogin     DateTime?

  //relations
  habits Habit[]
}

model Habit {
  disposition        Disposition @default(GOOD)
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  user   User     @relation(fields: [userId], references: [id])
  userId String

  schedule Json?

  createdAt   DateTime
  startDate   DateTime?
  endDate DateTime?

  //relations
  logs HabitLog[]
}

model HabitLog {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  habit   Habit    @relation(fields: [habitId], references: [id])
  habitId String
  completed Boolean @default(false)

  timeStamp  DateTime
}

enum Disposition{
  GOOD
  BAD
}